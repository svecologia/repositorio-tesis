name: Format metadata

on:
  workflow_run:
    workflows: ["Process Form to Markdown"]
    types:
      - completed

jobs:
  format-metadata:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Find new QMD files
        id: files
        run: |
          NEW_FILES=$(git diff --name-status ${{ github.event.before }} ${{ github.sha }} | grep '^A' | awk '{print $2}' | grep '^_accepted/.*\.qmd$' || true)
          echo "new_files=$NEW_FILES" >> $GITHUB_OUTPUT

      - name: Format Metadata in QMD files
        if: steps.files.outputs.new_files != ''
        run: |
          for f in ${{ steps.files.outputs.new_files }}; do
            # Extract headers from file (example expects 'Author:', 'Institution:', 'Abstract:' in the body)
            AUTHOR=$(grep -m1 '^Author:' "$f" | sed 's/^Author:[ ]*//')
            INSTITUTION=$(grep -m1 '^Institution:' "$f" | sed 's/^Institution:[ ]*//')
            ABSTRACT=$(grep -m1 '^Abstract:' "$f" | sed 's/^Abstract:[ ]*//')
            # Overwrite YAML front matter
            awk -v author="$AUTHOR" -v institution="$INSTITUTION" -v abstract="$ABSTRACT" '
              BEGIN { in_yaml = 0 }
              /^---$/ { if (!in_yaml) { in_yaml = 1; print; print "author: \"" author "\""; print "institution: \"" institution "\""; print "abstract: \"" abstract "\""; next } }
              in_yaml && /^author:/ { next }
              in_yaml && /^institution:/ { next }
              in_yaml && /^abstract:/ { next }
              { print }
            ' "$f" > tmp.qmd && mv tmp.qmd "$f"
          done

      - name: Commit changes
        run: |
          git config --global user.name "github-actions[bot]"
          git config --global user.email "github-actions[bot]@users.noreply.github.com"
          git add _accepted/*.qmd
          git commit -m "Format QMD metadata via workflow" || echo "No changes to commit"
          git push
