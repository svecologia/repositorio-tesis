name: Format metadata

on:
  workflow_run:
    workflows: ["Process Form to Markdown"]
    types:
      - completed

jobs:
  format-and-move:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Find new QMD files
        id: files
        run: |
          NEW_FILES=$(git diff --name-status ${{ github.event.before }} ${{ github.sha }} | grep '^A' | awk '{print $2}' | grep '^_accepted/.*\.qmd$' || true)
          echo "new_files=$NEW_FILES" >> $GITHUB_OUTPUT

      - name: Format Metadata and Move QMD files (bash, institution mapping, custom filename)
        if: steps.files.outputs.new_files != ''
        run: |
          for f in ${{ steps.files.outputs.new_files }}; do
            # Extract metadata using header mapping
            TITLE=$(awk '/^### Título de la tesis/{getline; print}' "$f" | head -n1 | xargs)
            DATE=$(awk '/^### Fecha de aprobación/{getline; print}' "$f" | head -n1 | xargs)
            AUTHOR=$(awk '/^### Autor/{getline; print}' "$f" | head -n1 | xargs)
            ABSTRACT=$(awk '/^### Resumen/{getline; print}' "$f" | head -n1 | xargs)
            CATEGORIES=$(awk '/^### Categorías/{getline; print}' "$f" | head -n1 | xargs)
            INSTITUTION=$(awk '/^### Institución/{getline; print}' "$f" | head -n1 | xargs)
            # Map full institution name to short code
            case "$INSTITUTION" in
              "Universidad Simon Bolivar") SHORTNAME="USB" ;;
              "Universidad Central de Venezuela") SHORTNAME="UCV" ;;
              "Universidad de Los Andes") SHORTNAME="ULA" ;;
              # Add further mappings as needed
              *) SHORTNAME=$(echo "$INSTITUTION" | tr '[:upper:]' '[:lower:]' | tr -cd '[:alnum:]') ;;
            esac
            # Get year from date (first 4 digits)
            YEAR=$(echo "$DATE" | grep -oE '[0-9]{4}' | head -n1)
            # Get last name from author (last word)
            LASTNAME=$(echo "$AUTHOR" | awk '{print $NF}' | tr '[:upper:]' '[:lower:]')
            # Compose new filename
            NEWFILENAME="${YEAR}_${LASTNAME}.qmd"
            # Compose new YAML
            {
              echo "---"
              echo "title: \"$TITLE\""
              echo "date: \"$DATE\""
              echo "date-format: \"iso\""
              echo "author: \"$AUTHOR\""
              echo "abstract: \"$ABSTRACT\""
              echo -n "categories: ["
              IFS=',' read -ra arr <<< "$CATEGORIES"
              for i in "${!arr[@]}"; do
                cat_item=$(echo "${arr[$i]}" | xargs)
                [ "$cat_item" ] && printf "\"%s\"" "$cat_item"
                [ $i -lt $((${#arr[@]}-1)) ] && printf ", "
              done
              echo "]"
              echo "---"
            } > tmp.qmd
            # Get body after YAML (if YAML block present, otherwise copy all)
            YAML_END=$(awk '/^---/{n++; if(n==2) print NR}' "$f")
            if [ -n "$YAML_END" ]; then
              tail -n +$((YAML_END+1)) "$f" >> tmp.qmd
            else
              cat "$f" >> tmp.qmd
            fi
            mkdir -p "tesis/$SHORTNAME"
            mv tmp.qmd "tesis/$SHORTNAME/$NEWFILENAME"
            rm "$f"
          done

      - name: Commit changes
        run: |
          git config --global user.name "github-actions[bot]"
          git config --global user.email "github-actions[bot]@users.noreply.github.com"
          git add tesis/**/*.qmd
          git rm -f _accepted/*.qmd || true
          git commit -m "Reformat and relocate QMD files via workflow (bash, institution mapping, custom filename)" || echo "No changes to commit"
          git push
          git commit -m "Format QMD metadata via workflow" || echo "No changes to commit"
          git push
